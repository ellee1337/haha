-- Combat Admin UI using Rayfield Library (Fixed Attack Function)
-- Works with the provided combat server script
-- Place this LocalScript in StarterPlayerScripts

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Wait for Remotes
local remotes = ReplicatedStorage:WaitForChild("Remotes")
local damageEvent = remotes:WaitForChild("DamageEvent")
local healEvent = remotes:WaitForChild("HealEvent")
local respawnEvent = remotes:WaitForChild("RespawnEvent")
local changeConfigRemote = remotes:FindFirstChild("ChangeConfigRequest") -- optional

--------------------------------------------------------------
-- ‚öôÔ∏è CONFIG
--------------------------------------------------------------
local CONFIG = {
    speed = 13,
    jumpPower = 78,
    maxHealth = 206,
    respawnTime = 7,
    debugMode = false
}

--------------------------------------------------------------
-- ü™ü CREATE WINDOW
--------------------------------------------------------------
local Window = Rayfield:CreateWindow({
    Name = "‚öîÔ∏è Combat Admin Panel",
    LoadingTitle = "Combat System",
    LoadingSubtitle = "by Elle",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "CombatUI",
        FileName = "config"
    },
})

--------------------------------------------------------------
-- üìã Player Settings Tab
--------------------------------------------------------------
local Tab = Window:CreateTab("Player Settings", 4483362458)

Tab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = CONFIG.speed,
    Flag = "WalkSpeed",
    Callback = function(value)
        CONFIG.speed = value
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = value
        end
    end,
})

Tab:CreateSlider({
    Name = "JumpPower",
    Range = {0, 200},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = CONFIG.jumpPower,
    Flag = "JumpPower",
    Callback = function(value)
        CONFIG.jumpPower = value
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = value
        end
    end,
})

Tab:CreateSlider({
    Name = "MaxHealth",
    Range = {50, 500},
    Increment = 1,
    Suffix = "HP",
    CurrentValue = CONFIG.maxHealth,
    Flag = "MaxHealth",
    Callback = function(value)
        CONFIG.maxHealth = value
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            local hum = player.Character.Humanoid
            hum.MaxHealth = value
            hum.Health = math.min(hum.Health, value)
        end
    end,
})

Tab:CreateSlider({
    Name = "Respawn Time",
    Range = {1, 20},
    Increment = 1,
    Suffix = "Seconds",
    CurrentValue = CONFIG.respawnTime,
    Flag = "RespawnTime",
    Callback = function(value)
        CONFIG.respawnTime = value
    end,
})

Tab:CreateToggle({
    Name = "Debug Mode",
    CurrentValue = CONFIG.debugMode,
    Flag = "DebugMode",
    Callback = function(value)
        CONFIG.debugMode = value
    end,
})

--------------------------------------------------------------
-- ‚öîÔ∏è Weapons Tab (Fixed Attack Logic)
--------------------------------------------------------------
local WeaponTab = Window:CreateTab("Weapons", 4483362458)

local weapons = {
    {name = "Sword", index = 1, damage = 15},
    {name = "Bow", index = 2, damage = 10},
    {name = "Staff", index = 3, damage = 25}
}

for _, weapon in ipairs(weapons) do
    WeaponTab:CreateButton({
        Name = "Attack with " .. weapon.name,
        Callback = function()
            local myChar = player.Character
            local myRoot = myChar and (myChar:FindFirstChild("HumanoidRootPart") or myChar:FindFirstChild("Torso"))
            if not myChar or not myRoot then
                Rayfield:Notify({Title = "Combat", Content = "Character not found", Duration = 2})
                return
            end

            local closest, dist = nil, 9999
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= player and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                    local d = (myRoot.Position - pl.Character.HumanoidRootPart.Position).Magnitude
                    if d < dist then
                        dist = d
                        closest = pl
                    end
                end
            end

            if closest then
                damageEvent:FireServer(closest, weapon.damage, weapon.index)
                Rayfield:Notify({Title = "Combat", Content = "Attacked " .. closest.Name .. " with " .. weapon.name, Duration = 2})
            else
                Rayfield:Notify({Title = "Combat", Content = "No target found nearby", Duration = 2})
            end
        end,
    })
end

--------------------------------------------------------------
-- üíæ Apply / Save Tab
--------------------------------------------------------------
local ApplyTab = Window:CreateTab("Save / Apply", 4483362458)

ApplyTab:CreateButton({
    Name = "Apply Settings to Server",
    Callback = function()
        if changeConfigRemote then
            changeConfigRemote:FireServer(CONFIG)
        end
        Rayfield:Notify({Title = "Settings Applied", Content = "Server configuration updated.", Duration = 3})
    end,
})

--------------------------------------------------------------
-- üí• Damage Effect Event
--------------------------------------------------------------
if remotes:FindFirstChild("DamageEffect") then
    remotes.DamageEffect.OnClientEvent:Connect(function(amount)
        Rayfield:Notify({Title = "Hit!", Content = "Damage: " .. tostring(amount), Duration = 1.5})
    end)
end

--------------------------------------------------------------
-- ‚å®Ô∏è UI Toggle Keybind (RightShift)
--------------------------------------------------------------
Rayfield:LoadConfiguration()

Rayfield:CreateKeybind({
    Name = "Toggle UI",
    CurrentKeybind = "RightShift",
    HoldToInteract = false,
    Flag = "ToggleUI",
    Callback = function()
        Rayfield:Toggle()
    end,
})
